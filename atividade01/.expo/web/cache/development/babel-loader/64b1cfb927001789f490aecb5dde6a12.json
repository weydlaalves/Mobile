{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\n\nvar Cabecalho = function (_Component) {\n  _inherits(Cabecalho, _Component);\n\n  var _super = _createSuper(Cabecalho);\n\n  function Cabecalho() {\n    _classCallCheck(this, Cabecalho);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Cabecalho, [{\n    key: \"render\",\n    value: function render() {\n      return;\n    }\n  }]);\n\n  return Cabecalho;\n}(Component);","map":{"version":3,"sources":["C:/Users/Weydla/Desktop/Weydla/FACULDADE/MOBILE/projetosmobile/my-app/Cabecalho.js"],"names":["React","Component","Cabecalho"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAGMC,S;;;;;;;;;;;;;6BACM;AACJ;AACH;;;;EAHmBD,S","sourcesContent":["import React, { Component } from 'react'\r\n\r\n\r\nclass Cabecalho extends Component {\r\n    render(){\r\n        return\r\n    }\r\n} \r\n"]},"metadata":{},"sourceType":"module"}